x <- filterDt[pollutant]
class(x)
pollutant = "nitrate"
means = mean(filterDt[[pollutant]], na.rm = TRUE)
means
getwd()
# Set the WG for this exercise.
setwd('/Volumes/Media HD/Documents/Coursera/datasciencecoursera/ProgrammingWithR/Week2')
pollutantmean <-function(directory, pollutant, id = 1:332){
## Read the data into a dataframe
path <- file.path(getwd(),directory)
setwd(path)
#Get the name of the files
file_names <-dir()
# Read the data into a dataframe
data <- do.call(rbind,lapply(file_names,read.csv, header=TRUE))
## Filter by ID
filterDt = data[data$ID %in% id,]
## Calculate the mean
means = mean(filterDt[[pollutant]], na.rm = TRUE)
}
pollutantmean('specdata','sulfate',1:10)
means
pollutantmean <-function(directory, pollutant, id = 1:332){
## Read the data into a dataframe
path <- file.path(getwd(),directory)
setwd(path)
#Get the name of the files
file_names <-dir()
# Read the data into a dataframe
data <- do.call(rbind,lapply(file_names,read.csv, header=TRUE))
## Filter by ID
filterDt = data[data$ID %in% id,]
## Calculate the mean
means = mean(filterDt[[pollutant]], na.rm = TRUE)
means
}
pollutantmean('specdata','sulfate',1:10)
setwd('/Volumes/Media HD/Documents/Coursera/datasciencecoursera/ProgrammingWithR/Week2')
?read.csv
directory='specdata'
file_names <-dir(file.path(getwd(),directory))
v"directory"+"love"
v,_"directory"+"love"
v<-"directory"+"love"
paste("directory","love")
directory = "specdata"
paste("/",directory,file_names,sep="")
paste("/",directory,"/",file_names,sep="")
data <- do.call(rbind,lapply( paste("/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
setwd('/Volumes/Media HD/Documents/Coursera/datasciencecoursera/ProgrammingWithR/Week2')
# Part 1:
# Write a function named 'pollutantmean' that calculates the
# mean of a pollutant (sulfate or nitrate) across a specified
# list of monitors. The function 'pollutantmean' takes three
# arguments: 'directory', 'pollutant', and 'id'.
# Given a vector monitor ID numbers, 'pollutantmean' reads
# that monitors' particulate matter data from the
#directory specified in the 'directory' argument and
#returns the mean of the pollutant across all of the monitors,
#ignoring any missing values coded as NA.
## 'directory is a character vector of lemgth 1 indicating the
## location of the CSV files.
## 'pollutant' is a character vector of length 1 indicating the name
## of the pollutant for wich we will calculate the mean; either "sulfate"
## or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers to be used
## return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
pollutantmean <-function(directory, pollutant, id = 1:332){
## Read the data into a dataframe
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
## Filter by ID
filterDt = data[data$ID %in% id,]
## Calculate the mean
means = mean(filterDt[[pollutant]], na.rm = TRUE)
means
}
pollutantmean('specdata','sulfate',1:10)
pollutantmean('specdata','nitrate',70:72)
pollutantmean('specdata','nitrate',23)
directory = 'specdata'
id = 1
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
## Filter by ID
filterDt = data[data$ID %in% id,]
n1 = length(which(!is.na(filterDt$sulfate)))
n1 = length(which(!is.na(filterDt$sulfate))) + length(which(!is.na(filterDt$nitrate)))
id = 2
filterDt = data[data$ID %in% id,]
## Figure out the number of obs
n1 = length(which(!is.na(filterDt$sulfate))) #+ length(which(!is.na(filterDt$nitrate)))
id = 4
filterDt = data[data$ID %in% id,]
## Figure out the number of obs
n1 = length(which(!is.na(filterDt$sulfate)))
id = c(2, 4, 8, 10, 12)
for i in id:
for (i in id) {print(i)}
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% i,]
## Figure out the number of obs
n1[i] = length(which(!is.na(filterDt$sulfate)))
}
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% i,]
## Figure out the number of obs
n1[i] = length(which(!is.na(filterDt$sulfate)) && which(!is.na(filterDt$nitrate)))
}
View(filterDt)
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% i,]
## Figure out the number of obs
n1[i] = length(which(!is.na(filterDt$sulfate) && !is.na(filterDt$nitrate)))
}
sum(!is.na(filterDt$nitrate))
sum(!is.na(filterDt$nitrate)&&!is.na(filterDt$(sulfate)))
sum(!is.na(filterDt$nitrate)&&!is.na(filterDt$(sulfate))
sum(!is.na(filterDt$nitrate))
sum(!is.na(filterDt$nitrate) && !is.na(filterDt$sulfate))
sum(!is.na(filterDt$nitrate) || !is.na(filterDt$sulfate))
?complete.cases
filterDt = data[data$ID %in% i,c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
View(filterDt)
filterDt = data[data$ID %in% id(i),c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
directory = "specdata"
id =c(2, 4, 8, 10, 12)
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
}
length(filterDt)
size(filterDt)
nrow(filterDt)
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
nobs[i] = nrow(filterDt)
}
nobs <-numeric(length(id))
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
nobs[i] <- nrow(filterDt)
}
out = data.frame(id = id, nobs = nobs)
View(out)
comp <-function(directory,id=1:332){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
nobs <-numeric(length(id))
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
nobs[i] <- nrow(filterDt)
}
# Put the dataframe together
out = data.frame(id = id, nobs = nobs)
}
comp("specdata", 1)
comp <-function(directory,id=1:332){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
nobs <-numeric(length(id))
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
nobs[i] <- nrow(filterDt)
}
# Put the dataframe together
out = data.frame(id = id, nobs = nobs)
out
}
comp("specdata", 1)
comp("specdata", c(2, 4, 8, 10, 12))
comp("specdata", 30:25)
comp("specdata", 3)
data <- comp(directory)
directory = "specdata"
threshold = 150
data <- comp(directory)
View(data)
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
# Filter for the two columns of interest
filterDt = data[,c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
View(filterDt)
directory = "specdata"
threshold = 150
comp <-function(directory,id=1:332){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
nobs <-numeric(length(id))
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
nobs[i] <- nrow(filterDt)
}
# Put the dataframe together
out = data.frame(id = id, nobs = nobs)
out
}
data <- comp(directory)
View(data)
i <-2
data$nobs[i]
directory = "specdata"
threshold = 150
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
# Read the data into a dataframe
id <-1:max(data$ID)
directory = "specdata"
threshold = 150
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
id <-1:max(data$ID)
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
corr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
corr[i] <-0
}
corr
}
corr <- numeric(length(id))
if (nobs>threshold){
corr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
corr[i] <-0
}
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
corr <- numeric(length(id))
if (nobs>threshold){
corr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
corr[i] <-0
}
corr
}
corr
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
corr <- numeric(length(id))
if (nobs>threshold){
corr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
corr[i] <-0
}
}
i<-1
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
corr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
corr[i] <-0
}
i<-2
directory = "specdata"
threshold = 150
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
id <-1:max(data$ID)
cr <- numeric(length(id))
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
cr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
cr[i] <-0
}
}
cr <- numeric(length(id))
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
cr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
cr[i] <-NA
}
}
bad = is.na(cr)
cr <- cr[!bad]
directory = "specdata"
threshold = 400
corr <- function(directory, threshold){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
id <-1:max(data$ID)
cr <- numeric(length(id))
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
cr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
cr[i] <-NA
}
}
bad = is.na(cr)
cr <- cr[!bad]
cr
}
directory = "specdata"
threshold = 400
corr <- function(directory, threshold=0){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
id <-1:max(data$ID)
cr <- numeric(length(id))
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
cr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
cr[i] <-NA
}
}
bad = is.na(cr)
cr <- cr[!bad]
cr
}
cr<-corr(directory,threshold)
setwd('/Volumes/Media HD/Documents/Coursera/datasciencecoursera/ProgrammingWithR/Week2')
# Set the WG for this exercise.
setwd('/Volumes/Media HD/Documents/Coursera/datasciencecoursera/ProgrammingWithR/Week2')
## Part 1:
# Write a function named 'pollutantmean' that calculates the
# mean of a pollutant (sulfate or nitrate) across a specified
# list of monitors. The function 'pollutantmean' takes three
# arguments: 'directory', 'pollutant', and 'id'.
# Given a vector monitor ID numbers, 'pollutantmean' reads
# that monitors' particulate matter data from the
#directory specified in the 'directory' argument and
#returns the mean of the pollutant across all of the monitors,
#ignoring any missing values coded as NA.
## 'directory is a character vector of lemgth 1 indicating the
## location of the CSV files.
## 'pollutant' is a character vector of length 1 indicating the name
## of the pollutant for wich we will calculate the mean; either "sulfate"
## or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers to be used
## return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
pollutantmean <-function(directory, pollutant, id = 1:332){
## Read the data into a dataframe
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
## Filter by ID
filterDt = data[data$ID %in% id,]
## Calculate the mean
means = mean(filterDt[[pollutant]], na.rm = TRUE)
means
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
comp <-function(directory,id=1:332){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
nobs <-numeric(length(id))
for (i in seq_along(id)){
## Filter by ID
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
## Figure out the number of obs
filterDt = filterDt[complete.cases(filterDt), ]
nobs[i] <- nrow(filterDt)
}
# Put the dataframe together
out = data.frame(id = id, nobs = nobs)
out
}
cc <- comp("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- comp("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- comp("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
corr <- function(directory, threshold=0){
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
id <-1:max(data$ID)
cr <- numeric(length(id))
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
cr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
cr[i] <-NA
}
}
bad = is.na(cr)
cr <- cr[!bad]
cr
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
#Get the name of the files
file_names <-dir(file.path(getwd(),directory))
# Read the data into a dataframe
data <- do.call(rbind,lapply( paste(getwd(),"/",directory,"/",file_names,sep=""),read.csv, header=TRUE))
id <-1:max(data$ID)
cr <- numeric(length(id))
for (i in seq_along(id)){
filterDt = data[data$ID %in% id[i],c("nitrate","sulfate")]
filterDt = filterDt[complete.cases(filterDt), ]
nobs <- nrow(filterDt)
if (nobs>threshold){
cr[i] <- cor(filterDt$nitrate, filterDt$sulfate)
} else {
cr[i] <-NA
}
}
bad = is.na(cr)
cr <- cr[!bad]
cr
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
clearAll
clearAll()
