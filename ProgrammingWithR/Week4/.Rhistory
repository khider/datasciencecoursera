if (outcomeName == "heart attack"){
hospital = filterState$Hospital.Name[which.min(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)]
}
if (outcomeName == "heart failure"){
hospital = filterState$Hospital.Name[which.min(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)]
}
if (outcomeName == "pneumonia"){
hospital = filterState$Hospital.Name[which.min(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)]
}
hospital
}
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","pneumonia")
best("NY","peumonia")
?order
setwd('/Volumes/Media HD/Documents/Coursera/datasciencecoursera/ProgrammingWithR/Week4')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#head(outcome)
state ="TX"
outcomeName = "heart attack"
filterState = outcome[outcome$State %in% state,]
rank = filterState[order(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterState$Hospital.Name, decreasing = TRUE)]
rank = filterState[order(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterState$Hospital.Name)]
order(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
order(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,filterState$Hospital.Name)
rank = filterState[order(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterState$Hospital.Name, decreasing=TRUE),]
View(rank)
rank = filterState[order(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterState$Hospital.Name),]
filterNA = filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
View(filterNA)
View(filterNA)
filterState <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterState = outcome[outcome$State %in% state,]
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
hospital <- filterNA$Hospital.Name[which.min(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)]
hospital
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
best<-function(state, outcomeName){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
}
if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
}
if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
hospital <-rank[1]
hospital
}
best("TX", "heart attack")
best<-function(state, outcomeName){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
}
if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
}
if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
hospital <-rank$Hospital.Name[1]
hospital
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
size(rank)
length(rank)
nrows(rank)
nrow(rank)
rank$Hospital.Name[196]
rankhospital <- function(state, outcome,num="best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
}
if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
}
if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital <-rank$Hospital.Name[nrow(rank)]
} else{
hospital <-rank$Hospital.Name[num]
}
hospital
}
rankhospital("TX", "heart failure", 4)
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
rank$Hospital.Name[4]
## PART3: Ranking hospitals by outcome in a state
rankhospital <- function(state, outcome,num="best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital <-rank$Hospital.Name[nrow(rank)]
} else{
hospital <-rank$Hospital.Name[num]
}
hospital
}
rankhospital("TX", "heart failure", 4)
est("TX", "heart failure")
best("TX", "heart failure")
rankhospital <- function(state, outcomeName,num="best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital <-rank$Hospital.Name[nrow(rank)]
} else{
hospital <-rank$Hospital.Name[num]
}
hospital
}
best("TX", "heart failure")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital <- function(state, outcomeName,num="best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital <-rank$Hospital.Name[nrow(rank)]
} else{
if (num>nrow(rank)){
hospital <-NA
} else{hospital <-rank$Hospital.Name[num]}
}
hospital
}
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
state <- unique(outcome$State)
view(state)
View(state)
for (i in seq_along(state)){
print(state[i])
}
hospital <-vector("char",length = length(state))
num =20
for (i in seq_along(state)){
filterState = outcome[outcome$State %in% state[i],]
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital[i] <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital[i] <-rank$Hospital.Name[nrow(rank)]
} else{
if (num>nrow(rank)){
hospital[i] <-NA
} else{hospital[i] <-rank$Hospital.Name[num]}
}
}
View(hospital)
head(hopistal,10)
head(hospital,10)
output <-data.fame(state=state, hospitalName = hospital)
output <-data.frame(state=state, hospitalName = hospital)
head(output,10)
state = sort(state)
for (i in seq_along(state)){
filterState = outcome[outcome$State %in% state[i],]
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital[i] <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital[i] <-rank$Hospital.Name[nrow(rank)]
} else{
if (num>nrow(rank)){
hospital[i] <-NA
} else{hospital[i] <-rank$Hospital.Name[num]}
}
}
output <-data.frame(state=state, hospitalName = hospital)
# Sort
head(output,10)
rankall <- function(outcomeName, num = "best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check that outcome is valid
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Find unique entries for state
state <- unique(outcome$State)
state = sort(state)
for (i in seq_along(state)){
filterState = outcome[outcome$State %in% state[i],]
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital[i] <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital[i] <-rank$Hospital.Name[nrow(rank)]
} else{
if (num>nrow(rank)){
hospital[i] <-NA
} else{hospital[i] <-rank$Hospital.Name[num]}
}
}
output <-data.frame(state=state, hospitalName = hospital)
output
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
best<-function(state, outcomeName){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
}
if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
}
if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
hospital <-rank$Hospital.Name[1]
hospital
}
## PART3: Ranking hospitals by outcome in a state
rankhospital <- function(state, outcomeName,num="best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#Check that state and outcome are valid
if (!state %in% outcome[,7]){
stop("invalid state")
}
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Return hospital name in that state with lowest 30-day death
# filter by state
filterState = outcome[outcome$State %in% state,]
# Find the
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital <-rank$Hospital.Name[nrow(rank)]
} else{
if (num>nrow(rank)){
hospital <-NA
} else{hospital <-rank$Hospital.Name[num]}
}
hospital
}
##PART 4: RankAll function
rankall <- function(outcomeName, num = "best"){
#Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Check that outcome is valid
if (!outcomeName %in% c("heart attack","heart failure","pneumonia")){
stop("invalid outcome")
}
# Find unique entries for state
state <- unique(outcome$State)
state = sort(state)
for (i in seq_along(state)){
filterState = outcome[outcome$State %in% state[i],]
if (outcomeName == "heart attack"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, filterNA$Hospital.Name),]
} else if (outcomeName == "heart failure"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, filterNA$Hospital.Name),]
} else if (outcomeName == "pneumonia"){
filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <-suppressWarnings(as.numeric(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
filterNA <- filterState[!(is.na(filterState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)),]
rank = filterNA[order(filterNA$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, filterNA$Hospital.Name),]
}
if (num=="best"){
hospital[i] <-rank$Hospital.Name[1]
} else if (num=="worst"){
hospital[i] <-rank$Hospital.Name[nrow(rank)]
} else{
if (num>nrow(rank)){
hospital[i] <-NA
} else{hospital[i] <-rank$Hospital.Name[num]}
}
}
output <-data.frame(state=state, hospitalName = hospital)
output
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
